name: CI/CD Pipeline for TemanDifa Backend

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Node.js dependencies and Run Tests
        run: |
          npm install
          npm test

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies and Run Tests
        run: |
          pip install -r base/requirements.txt -r yolo_detector/requirements.txt -r voice_transcriber/requirements.txt -r ocr_service/requirements.txt
          pytest

  build-scan-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API Gateway
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-gateway:latest

      - name: Build and push YOLO Detector
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./yolo_detector/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-yolo:latest

      - name: Build and push Voice Transcriber
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./voice_transcriber/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-transcriber:latest

      - name: Build and push OCR Service
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./ocr_service/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-ocr:latest

      - name: Install Trivy and Scan images
        run: |
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          trivy image --ignore-unfixed --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-gateway:latest
          trivy image --ignore-unfixed --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-yolo:latest
          trivy image --ignore-unfixed --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-transcriber:latest
          trivy image --ignore-unfixed --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKERHUB_USERNAME }}/temandifa-ocr:latest

  deploy:
    needs: build-scan-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          key: ${{ secrets.PROD_SERVER_SSH_KEY }}
          script: |
            cd ~/temandifa-backend
            docker-compose pull
            docker-compose up -d
            echo "Deployment successful!"
