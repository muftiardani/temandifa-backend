services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9100:9100"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    depends_on:
      - mongo
      - redis
      - yolo-detector
      - voice-transcriber
      - ocr-service
    networks:
      - temandifa-net

  python-base-builder:
    build:
      context: ./base
      dockerfile: Dockerfile
    image: temandifa-python-base:latest

  yolo-detector:
    build:
      context: ./yolo_detector
      dockerfile: Dockerfile
    container_name: yolo-detector
    restart: unless-stopped
    ports:
      - "5001:5001"
    env_file:
      - .env
    depends_on:
      - python-base-builder
    networks:
      - temandifa-net

  voice-transcriber:
    build:
      context: ./voice_transcriber
      dockerfile: Dockerfile
    container_name: voice-transcriber
    restart: unless-stopped
    ports:
      - "5002:5002"
    env_file:
      - .env
    depends_on:
      - python-base-builder
    networks:
      - temandifa-net

  ocr-service:
    build:
      context: ./ocr_service
      dockerfile: Dockerfile
    container_name: ocr-service
    restart: unless-stopped
    ports:
      - "5003:5003"
    env_file:
      - .env
    depends_on:
      - python-base-builder
    networks:
      - temandifa-net

  mongo:
    image: mongo:latest
    container_name: temandifa_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - temandifa-net

  redis:
    image: "redis:alpine"
    container_name: temandifa_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - temandifa-net

  prometheus:
    image: prom/prometheus:latest
    container_name: temandifa_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - temandifa-net

  grafana:
    image: grafana/grafana-oss:latest
    container_name: temandifa_grafana
    restart: unless-stopped
    ports:
      - "4000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - temandifa-net

networks:
  temandifa-net:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
