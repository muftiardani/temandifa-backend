services:
  mongodb:
    image: mongo:latest
    container_name: temandifa_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: "redis:alpine"
    container_name: temandifa_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  api:
    build: .
    container_name: temandifa_api
    restart: unless-stopped
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    depends_on:
      - mongodb
      - redis
    volumes:
      - .:/app
      - /app/node_modules

  yolo_detector:
    build: ./yolo_detector
    container_name: temandifa_yolo_detector
    restart: unless-stopped
    ports:
      - "5001:5001"
    env_file:
      - .env

  ocr_service:
    build: ./ocr_service
    container_name: temandifa_ocr_service
    restart: unless-stopped
    ports:
      - "5002:5002"
    env_file:
      - .env

  voice_transcriber:
    build: ./voice_transcriber
    container_name: temandifa_voice_transcriber
    restart: unless-stopped
    ports:
      - "5003:5003"
    env_file:
      - .env

  prometheus:
    image: prom/prometheus:latest
    container_name: temandifa_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:latest
    container_name: temandifa_grafana
    restart: unless-stopped
    ports:
      - "4000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning

volumes:
  mongo_data:
  redis_data: